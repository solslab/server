name: Java CI/CD with Gradle

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: [self-hosted, server]
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - run: touch ./src/main/resources/application.properties
      - run: echo "${{ secrets.PROD_CONFIG }}" > ./src/main/resources/application.properties
      - run: cat ./src/main/resources/application.properties

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      # Docker build & push (Keychain-free)
      - name: Docker build & push to Docker hub
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/sols-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/sols-app:latest

  deploy:
    runs-on: [self-hosted, server]
    needs: build
    permissions:
      contents: read

    steps:
      - name: Deploy with docker-compose
        run: |
          cd /Users/gyujh-home-server/server

          # 1. 임시 .env 생성
          echo "${{ secrets.PROD_CONFIG }}" > .env.temp

          # 2. 컨테이너 실행
          docker-compose --env-file .env.temp down
          docker-compose --env-file .env.temp pull
          docker-compose --env-file .env.temp up -d

          # 3. 임시 .env 삭제
          rm .env.temp
